version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: dob-validator-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: dob_validator
      POSTGRES_USER: dob_user
      POSTGRES_PASSWORD: dob_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dob_user -d dob_validator"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dob-validator-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dobvalidator.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    container_name: dob-validator-backend
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://dob_user:dob_password@postgres:5432/dob_validator?schema=public
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - STELLAR_NETWORK=testnet
      - STELLAR_HORIZON_URL=https://horizon-testnet.stellar.org
      - UPLOAD_DIR=uploads
      - MAX_FILE_SIZE=10485760
      - PORT=3001
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
    container_name: dob-validator-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backoffice:
    build:
      context: ..
      dockerfile: backoffice/Dockerfile
    container_name: dob-validator-backoffice
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  pgadmin_data:
  uploads_data:
